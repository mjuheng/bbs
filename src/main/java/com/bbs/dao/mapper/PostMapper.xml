<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbs.dao.IPostDao">

    <resultMap id="postAndConsumerNameAndCategoryName" type="Post">
        <id property="id" column="id" />
        <result property="title" column="title" />
        <result property="lastTime" column="lastTime" />
        <result property="resolve" column="resolve" />
        <result property="replyNum" column="replyNum" />
        <result property="watchNum" column="watchNum" />
        <association property="consumer" javaType="Consumer">
            <result property="id" column="consumer_id" />
            <result property="username" column="username" />
            <result property="headImage" column="headImage" />
        </association>
        <association property="category" javaType="Category">
            <result property="name" column="name" />
        </association>
    </resultMap>

    <sql id="findPost">
        SELECT post.*,consumer.username,consumer.headImage,consumer.id,category.name FROM post,consumer,category
        WHERE post.consumer_id = consumer.id
        AND post.category_id = category.id
    </sql>

    <!--插入全部信息-->
    <insert id="insertPost" parameterType="Post" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO post(title,firstTime,lastTime,resolve,peak,replyNum,category_id,consumer_id)
        VALUE(#{title},#{firstTime},#{lastTime},#{resolve},#{peak},#{replyNum},#{category_id},#{consumer_id})
    </insert>

    <!--查找全部的帖子-->
    <select id="findAll" resultMap="postAndConsumerNameAndCategoryName">
        <include refid="findPost" />
        ORDER BY post.id DESC
    </select>

    <!--访问时，观看人数加一-->
    <update id="updateWatchNum" parameterType="Integer">
        UPDATE post
        SET watchNum = watchNum + 1
        WHERE id = #{id}
    </update>

    <!--根据分类查找帖子-->
    <select id="findByCategory" parameterType="Integer" resultMap="postAndConsumerNameAndCategoryName">
        <include refid="findPost" />
        AND post.category_id = #{category_id}
    </select>

    <!--查找置顶帖子-->
    <select id="findPostPeak" resultMap="postAndConsumerNameAndCategoryName">
        <include refid="findPost" />
        AND post.peak = 1
    </select>

    <!--回复数+1-->
    <update id="updateReplyNum" parameterType="Integer">
        UPDATE post
        SET replyNum = replyNum + 1
        WHERE id = #{id}
    </update>

    <!--根据帖子标题，进行模糊查找-->
    <select id="findPostByTitle" parameterType="String" resultMap="postAndConsumerNameAndCategoryName">
        <include refid="findPost" />
        AND post.title LIKE '%${_parameter}%'
    </select>

    <!--根据ID,查看帖子的解决状态-->
    <select id="checkResolve" parameterType="Integer" resultType="Boolean">
        SELECT post.resolve FROM post
        WHERE post.id = #{id}
    </select>

    <!--将帖子设置为已解决状态-->
    <update id="setResolve" parameterType="Integer">
        UPDATE post
        SET post.resolve = TRUE
        WHERE post.id = #{id}
    </update>
    
    <!--回复数-1-->
    <update id="deductReplyNum" parameterType="Integer">
        UPDATE post
        SET replyNum = replyNum - 1
        WHERE id = #{id}
    </update>

    <!--根据用户id，查找所发帖子-->
    <select id="findByConsumerId" parameterType="Integer" resultMap="postAndConsumerNameAndCategoryName">
        <include refid="findPost" />
        AND post.consumer_id = #{id}
    </select>

    <!--根据用户id，查看其发帖数-->
    <select id="findCountByConsumerId" parameterType="Integer" resultType="Integer">
        SELECT COUNT(*) FROM post
        WHERE post.consumer_id = #{id}
    </select>

    <!--查找置顶帖子数-->
    <select id="findPeakCount" resultType="Integer">
        SELECT COUNT(*) FROM post
        WHERE post.peak = TRUE
    </select>

    <!--将帖子置顶-->
    <update id="makePeakById" parameterType="Integer">
        UPDATE post
        SET peak = TRUE
        WHERE id = #{id}
    </update>

    <!--取消帖子置顶-->
    <update id="removePeak" parameterType="Integer">
        UPDATE post
        SET peak = FALSE
        WHERE id = #{id}
    </update>

    <!--根据id，删除帖子-->
    <delete id="deleteById" parameterType="Integer">
        DELETE FROM post
        WHERE id = #{id}
    </delete>

    <!--根据帖子id，查找所发贴人-->
    <select id="findConsumerByPostId" parameterType="Integer" resultType="Consumer">
        SELECT id FROM consumer
        WHERE id = (SELECT consumer_id FROM post
	                WHERE post.id = #{id}
                   )
    </select>
</mapper>